rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read: if
          request.time < timestamp.date(2021, 12, 25);
    }
    function userIsLoggedIn() {
      return request.auth != null
    }
    function isNewResource() {
    	return resource == null
    }
    function threadBelongsToUser() {
    	return request.auth.uid == resource.data.userId
    }
    match /threads/{thread} {
    	function isOnlyAppendingPostAndContributor() {
      	return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['posts', 'contributors'])
      }
      allow write: if
      	userIsLoggedIn() && isNewResource() || threadBelongsToUser()
      allow update: if
      	isOnlyAppendingPostAndContributor()
    }
    match /posts/{post} {
      allow write: if
      	userIsLoggedIn() && isNewResource() || threadBelongsToUser()
    }
    match /forums/{forum} {
    	function isOnlyAppendingThread() {
      	return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['threads'])
      }
      allow update: if
      isOnlyAppendingThread() && userIsLoggedIn()
    }
    match /users/{user} {
    	allow create: if
      	true
      allow update: if
      	request.auth.uid == resource.id
    }
  }
}